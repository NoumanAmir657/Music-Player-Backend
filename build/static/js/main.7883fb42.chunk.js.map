{"version":3,"sources":["Login.js","useAuth.js","TrackSearchResult.js","Player.js","Dashboard.js","App.js","index.js"],"names":["AUTH_URL","env","Login","className","Container","style","minHeight","href","useAuth","code","useState","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","useEffect","axios","post","then","res","console","log","data","window","history","pushState","catch","location","interval","setInterval","clearInterval","TrackSearchResult","track","chooseTrack","cursor","onClick","src","albumUrl","height","width","title","artist","Player","trackUri","play","setPlay","token","showSaveIcon","callback","state","isPlaying","uris","styles","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","sliderTrackColor","sliderHandleColor","spotifyApi","SpotifyWebApi","clientId","CLIENT_ID","Dashboard","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","get","params","cancel","searchTracks","tracks","body","items","map","smallestAlbumImage","album","images","reduce","smallest","image","artists","name","uri","url","Form","Control","type","placeholder","value","onChange","e","target","overflowY","length","whiteSpace","URLSearchParams","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7883fb42.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Container} from 'react-bootstrap'\r\nimport env from 'react-dotenv'\r\n\r\n// change here\r\nconst AUTH_URL = env.AUTH_URL\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className='bg-black'>\r\n        <Container className=\"d-flex justify-content-center align-items-center\" style={{minHeight: \"100vh\"}}>\r\n            <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>\r\n                Login With Spotify\r\n            </a>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst useAuth = (code) => {\r\n    const [accessToken, setAccessToken] = useState();\r\n    const [refreshToken, setRefreshToken] = useState();\r\n    const [expiresIn, setExpiresIn] = useState();\r\n\r\n    useEffect(() => {\r\n        //console.log(code)\r\n        axios.post('http://localhost:3001/login', {\r\n          code: code,  \r\n        })\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setAccessToken(res.data.accessToken)\r\n            setRefreshToken(res.data.refreshToken)\r\n            setExpiresIn(res.data.expiresIn)\r\n            window.history.pushState({}, null, '/')\r\n        })\r\n        .catch(() => {\r\n            window.location = '/'\r\n        })\r\n    }, [code])\r\n\r\n    useEffect(() => {\r\n        if (!refreshToken || !expiresIn) return\r\n        const interval = setInterval(() =>{\r\n            axios.post('http://localhost:3001/refresh', {\r\n                refreshToken,  \r\n            })\r\n            .then(res => {\r\n                setAccessToken(res.data.accessToken)\r\n                setExpiresIn(res.data.expiresIn)\r\n                window.history.pushState({}, null, '/')\r\n            })\r\n            .catch(() => {\r\n                window.location = '/'\r\n            })\r\n        }, (expiresIn - 60) * 1000)\r\n        \r\n        return () => clearInterval(interval)\r\n\r\n    }, [refreshToken, expiresIn])\r\n\r\n    return accessToken\r\n}\r\n\r\nexport default useAuth\r\n","import React from 'react'\r\n\r\nconst TrackSearchResult = ({track, chooseTrack}) => {\r\n\r\n    const handlePlay = () => {\r\n        chooseTrack(track)\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex m-2 align-items-center\" style={{cursor: 'pointer'}} onClick={handlePlay}>\r\n            <img src={track.albumUrl} style={{height: \"64px\", width:\"64px\"}}/>\r\n            <div className=\"ml-3 px-2\">\r\n                <div>{track.title}</div>\r\n                <div className='text-muted'>{track.artist}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrackSearchResult\r\n","import React, {useState, useEffect} from 'react'\r\nimport SpotifyPlayer from 'react-spotify-web-playback'\r\n\r\nconst Player = ({accessToken, trackUri}) => {\r\n    const [play, setPlay] = useState(false)\r\n\r\n    useEffect(() => setPlay(true), [trackUri])\r\n\r\n    if (!accessToken) return null\r\n    return (\r\n        <SpotifyPlayer\r\n        token={accessToken}\r\n        showSaveIcon={true}\r\n        callback={state => {\r\n            if(!state.isPlaying) setPlay(false)\r\n        }}\r\n        play={play}\r\n        uris={trackUri ? [trackUri] : []}\r\n\r\n        styles={{\r\n            activeColor: '#000',\r\n            bgColor: '#00d13f',\r\n            color: '#000',\r\n            loaderColor: '#000',\r\n            sliderColor: '#fff',\r\n            trackArtistColor: '#000',\r\n            trackNameColor: '#000',\r\n            sliderTrackColor: '#868f8f',\r\n            height: 80,\r\n            sliderHandleColor: '#fff'\r\n        }}\r\n        />\r\n    )\r\n}\r\n// 07691e\r\nexport default Player\r\n","import React, {useState, useEffect} from 'react'\r\nimport useAuth from './useAuth'\r\nimport {Container, Form} from 'react-bootstrap'\r\nimport SpotifyWebApi from 'spotify-web-api-node'\r\nimport TrackSearchResult from './TrackSearchResult'\r\nimport Player from './Player'\r\nimport axios from 'axios'\r\nimport env from 'react-dotenv'\r\n\r\n// change here\r\nconst spotifyApi = new SpotifyWebApi({\r\n    clientId: env.CLIENT_ID,\r\n})\r\n\r\nconst Dashboard = ({code}) => {\r\n    const accessToken = useAuth(code)\r\n    const [search, setSearch] = useState('')\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [playingTrack, setPlayingTrack] = useState()\r\n    const [lyrics, setLyrics] = useState('')\r\n\r\n    const chooseTrack = (track) => {\r\n        setPlayingTrack(track)\r\n        setSearch('')\r\n        setLyrics('')\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if (!playingTrack) return\r\n\r\n        axios.get(\"http://localhost:3001/lyrics\", {\r\n            params: {\r\n                title: playingTrack.title,\r\n                artist: playingTrack.artist\r\n            }\r\n        }).then(res => {\r\n            setLyrics(res.data.lyrics)\r\n        })\r\n    }, [playingTrack])\r\n\r\n    useEffect(() => {\r\n        if (!accessToken) return\r\n        spotifyApi.setAccessToken(accessToken)\r\n    }, [accessToken])\r\n\r\n    useEffect(() => {\r\n        if (!search) return setSearchResults([])\r\n        if (!accessToken) return\r\n\r\n        let cancel = false\r\n\r\n        spotifyApi.searchTracks(search)\r\n        .then(res => {\r\n            if (cancel) return\r\n            const tracks = res.body.tracks.items \r\n            // console.log(tracks)\r\n\r\n            setSearchResults(tracks.map(track => {\r\n\r\n                const smallestAlbumImage = track.album.images.reduce(\r\n                    (smallest, image) => {\r\n                        if (image.height < smallest.height) return image\r\n                        return smallest\r\n                    }, track.album.images[0])\r\n\r\n                return {\r\n                    artist: track.artists[0].name,\r\n                    title: track.name,\r\n                    uri: track.uri,\r\n                    albumUrl: smallestAlbumImage.url,\r\n                }\r\n            }))\r\n        })\r\n        \r\n        return () => cancel = true\r\n\r\n    }, [accessToken, search])\r\n\r\n    return (\r\n        <div className='bg-black'>\r\n\r\n            <Container className='d-flex flex-column py-4' style={{height: \"100vh\"}}>\r\n                <Form.Control type='search' \r\n                placeholder=\"Search Songs/Artists\" \r\n                value={search}\r\n                onChange={e => setSearch(e.target.value)}\r\n                />\r\n\r\n                <div className='flex-grow-1 my-2 text-white' style={{overflowY: 'auto'}}>\r\n                    {searchResults.map(track => (\r\n                        <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack}/>\r\n                    ))}\r\n\r\n                    {searchResults.length === 0 && (\r\n                        <div className='text-center text-white' style={{whiteSpace: 'pre'}}>\r\n                        {lyrics}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div>\r\n                    <Player accessToken={accessToken} trackUri={playingTrack?.uri}/>\r\n                </div>\r\n        </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Login from './Login'\nimport Dashboard from './Dashboard'\n\nconst code = new URLSearchParams(window.location.search).get('code')\n\nconst App = () => {\n  return code ? <Dashboard code={code} /> : <Login/>\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}